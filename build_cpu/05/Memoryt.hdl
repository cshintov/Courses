// This file is p6art of www.nand2tetris.org

// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */
CHIP Memoryt {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    DMux4Way(in=true,sel[1]=load,sel[0]=address[14],a=a,b=b,c=ramwr,d=scrwr);
    
    RAM16K(in[0..15]=in,load=ramwr,address[0..13]=address[0..13],out=ramout);
    Screen(in[0..15]=in,load=scrwr,address[0..12]=address[0..12],out=scrout);

    Mux4Way16(a=ramout ,b=ramout ,c=scrout,d=kbdout ,sel[1]=address[14],sel[0]=address[13],out=out);
    Keyboard(out=kbdout);

}
